[
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "TestClient",
        "importPath": "fastapi.testclient",
        "description": "fastapi.testclient",
        "isExtraImport": true,
        "detail": "fastapi.testclient",
        "documentation": {}
    },
    {
        "label": "app",
        "importPath": "main",
        "description": "main",
        "isExtraImport": true,
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "contas_a_pagar_e_receber_router",
        "importPath": "contas_a_pagar_e_receber.routers",
        "description": "contas_a_pagar_e_receber.routers",
        "isExtraImport": true,
        "detail": "contas_a_pagar_e_receber.routers",
        "documentation": {}
    },
    {
        "label": "ContaPagarReceberResponse",
        "kind": 6,
        "importPath": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "description": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "peekOfCode": "class ContaPagarReceberResponse(BaseModel):\n    id: int\n    desc: str\n    valor: Decimal\n    tipo: str\nclass ContaPagarReceberRequest(BaseModel):\n    desc: str\n    valor: Decimal\n    tipo: str\n@router.get(\"/\", response_model=List[ContaPagarReceberResponse], status_code=200)",
        "detail": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "ContaPagarReceberRequest",
        "kind": 6,
        "importPath": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "description": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "peekOfCode": "class ContaPagarReceberRequest(BaseModel):\n    desc: str\n    valor: Decimal\n    tipo: str\n@router.get(\"/\", response_model=List[ContaPagarReceberResponse], status_code=200)\nasync def listar_contas():\n    return [\n        ContaPagarReceberResponse(id=1, desc=\"Conta de luz\", valor=1000.50, tipo=\"pagar\"),\n        ContaPagarReceberResponse(id=2, desc=\"Aluguel\", valor=1000.50, tipo=\"pagar\"),\n    ]",
        "detail": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "description": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "peekOfCode": "router = APIRouter(prefix=\"/contas-a-pagar-e-receber\")\nclass ContaPagarReceberResponse(BaseModel):\n    id: int\n    desc: str\n    valor: Decimal\n    tipo: str\nclass ContaPagarReceberRequest(BaseModel):\n    desc: str\n    valor: Decimal\n    tipo: str",
        "detail": "contas_a_pagar_e_receber.routers.contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\nos.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV_PROMPT\"]",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV_PROMPT\"] = \"\" or os.path.basename(base)  # noqa: SIM222\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.10/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "fast-api-deploy-venv.bin.activate_this",
        "description": "fast-api-deploy-venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "fast-api-deploy-venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "test_dev_listar_contas_a_pagar_e_recber",
        "kind": 2,
        "importPath": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "description": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "peekOfCode": "def test_dev_listar_contas_a_pagar_e_recber():\n    response = client.get(\"/contas-a-pagar-e-receber\")\n    assert response.status_code == 200\ndef test_dev_criar_conta_a_pagar_e_receber():\n    nova_conta = {\n        \"desc\": \"Curso Python\",\n        \"valor\": 123,\n        \"tipo\": \"pagar\",\n    }\n    response = client.post(\"/contas-a-pagar-e-receber\", json=nova_conta)",
        "detail": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "test_dev_criar_conta_a_pagar_e_receber",
        "kind": 2,
        "importPath": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "description": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "peekOfCode": "def test_dev_criar_conta_a_pagar_e_receber():\n    nova_conta = {\n        \"desc\": \"Curso Python\",\n        \"valor\": 123,\n        \"tipo\": \"pagar\",\n    }\n    response = client.post(\"/contas-a-pagar-e-receber\", json=nova_conta)\n    assert response.status_code == 201",
        "detail": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "client",
        "kind": 5,
        "importPath": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "description": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "peekOfCode": "client = TestClient(app)\ndef test_dev_listar_contas_a_pagar_e_recber():\n    response = client.get(\"/contas-a-pagar-e-receber\")\n    assert response.status_code == 200\ndef test_dev_criar_conta_a_pagar_e_receber():\n    nova_conta = {\n        \"desc\": \"Curso Python\",\n        \"valor\": 123,\n        \"tipo\": \"pagar\",\n    }",
        "detail": "test.contas_a_pagar_e_receber.routers.test_contas_a_pagar_e_receber_router",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\napp.include_router(contas_a_pagar_e_receber_router.router)",
        "detail": "main",
        "documentation": {}
    }
]